[{"C:\\Users\\q\\madcamp_week4\\src\\index.js":"1","C:\\Users\\q\\madcamp_week4\\src\\App.js":"2","C:\\Users\\q\\madcamp_week4\\src\\reportWebVitals.js":"3","C:\\Users\\q\\madcamp_week4\\src\\components\\Mytest.js":"4","C:\\Users\\q\\madcamp_week4\\src\\components\\Login\\Login.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":276,"mtime":1611424222133,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":2008,"mtime":1611412452910,"results":"10","hashOfConfig":"7"},{"size":3403,"mtime":1611424220080,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"d2fwh4",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\q\\madcamp_week4\\src\\index.js",[],["24","25"],"C:\\Users\\q\\madcamp_week4\\src\\App.js",["26","27","28"],"C:\\Users\\q\\madcamp_week4\\src\\reportWebVitals.js",[],"C:\\Users\\q\\madcamp_week4\\src\\components\\Mytest.js",["29","30","31"],"import React, { Component, useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction Mytest(props){\r\n    const [state, setState] = useState({name:\"\",age:0, test:\"\"});\r\n\r\n\r\n    useEffect( () => {\r\n        document.title = `이름은 : ${state.name}`;\r\n        \r\n        getTest()\r\n          .then(response => {\r\n            if(response.data){\r\n              //const obj = JSON.parse(response.data);\r\n              console.log(response.data.myCollection[0]);\r\n              state.name = response.data.myCollection[0].test_database;\r\n              state.age = response.data.myCollection[0].test;\r\n              //console.log(obj.test_database);\r\n              //console.log(obj.test);\r\n            }\r\n            else\r\n              console.log('no result');\r\n            })\r\n          .catch(error => {\r\n            console.log(error);\r\n          })\r\n        \r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <p> {`test_database is ${state.name}`}</p>\r\n        <p> {`test is ${state.age}`}</p>\r\n        \r\n        \r\n        <input type='text' value={state.test} onChange={e => setState({...state, test:e.target.value})}/>\r\n        {/*\r\n        <input type='number' value={state.age } onChange={e => setState({...state, age:e.target.value})}/>\r\n        */}\r\n        <br></br>안녕하세요! 제 이름은 <b>{props.name}</b> 입니다.\r\n      </div>\r\n    );\r\n}\r\n\r\nMytest.defaultProps = {\r\n    name: '연습중이에요!'\r\n}\r\n\r\nconst getTest = () => {\r\n  try{\r\n    return axios.get('http://192.249.18.232:8080/');\r\n  } catch(error){\r\n    console.error(error);\r\n  }\r\n}\r\nconst getTder = () =>{\r\n  const breeds = getTest()\r\n                .then(response => {\r\n                  if(response.data){\r\n                    console.log(response.data.myCollection);\r\n                  }\r\n                  else\r\n                    console.log('no result');\r\n                })\r\n                .catch(error => {\r\n                  console.log(error);\r\n                })\r\n};\r\n\r\n\r\nexport default Mytest;","C:\\Users\\q\\madcamp_week4\\src\\components\\Login\\Login.js",["32","33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"43","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"39","severity":1,"message":"44","line":7,"column":9,"nodeType":"41","messageId":"42","endLine":7,"endColumn":13},{"ruleId":"39","severity":1,"message":"45","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"39","severity":1,"message":"46","line":57,"column":7,"nodeType":"41","messageId":"42","endLine":57,"endColumn":14},{"ruleId":"39","severity":1,"message":"47","line":58,"column":9,"nodeType":"41","messageId":"42","endLine":58,"endColumn":15},{"ruleId":"39","severity":1,"message":"45","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":16,"column":16,"nodeType":"50","endLine":25,"endColumn":6},{"ruleId":"51","severity":1,"message":"52","line":37,"column":34,"nodeType":"53","messageId":"54","endLine":37,"endColumn":36},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Mytest' is defined but never used.","'name' is assigned a value but never used.","'Component' is defined but never used.","'getTder' is assigned a value but never used.","'breeds' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]