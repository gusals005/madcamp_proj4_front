[{"C:\\Users\\q\\madcamp_week4\\src\\index.js":"1","C:\\Users\\q\\madcamp_week4\\src\\App.js":"2","C:\\Users\\q\\madcamp_week4\\src\\reportWebVitals.js":"3","C:\\Users\\q\\madcamp_week4\\src\\pages\\Login\\Signup.js":"4","C:\\Users\\q\\madcamp_week4\\src\\pages\\Home\\Home.js":"5","C:\\Users\\q\\madcamp_week4\\src\\pages\\Login\\Login.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":534,"mtime":1611592986562,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":4046,"mtime":1611586670272,"results":"11","hashOfConfig":"8"},{"size":1750,"mtime":1611592830420,"results":"12","hashOfConfig":"8"},{"size":3270,"mtime":1611592480332,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"d2fwh4",{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\q\\madcamp_week4\\src\\index.js",[],["28","29"],"C:\\Users\\q\\madcamp_week4\\src\\App.js",["30","31","32"],"C:\\Users\\q\\madcamp_week4\\src\\reportWebVitals.js",[],"C:\\Users\\q\\madcamp_week4\\src\\pages\\Login\\Signup.js",["33","34"],"import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Signup(){\r\n    const [state, setState] = useState({userid:\"\",password:\"\",confirmPassword:\"\",nickname:\"\", coin:10000, register:\"loading\"});\r\n\r\n    document.title = `Sign up`;\r\n\r\n\r\n    useEffect( async () => {\r\n        //const response = await axios.get('http://192.249.18.232:8080/');\r\n        //console.log(response);\r\n        \r\n        /*\r\n              console.log(response.data.myCollection[0]);\r\n              state.name = response.data.myCollection[0].test_database;\r\n              state.age = response.data.myCollection[0].test;\r\n        */\r\n    });\r\n    \r\n    //회원가입 \r\n    async function register(e) {\r\n        e.preventDefault();\r\n        console.log('Register was clicked');\r\n        if(state.password === state.confirmPassword){\r\n            const response = await axios.post('http://192.249.18.232:8080/user/signup',{\r\n                user_id: state.userid,\r\n                password : state.password,\r\n                //confirmPassword: state.confirmPassword,\r\n                name:state.nickname,\r\n                coin:state.coin\r\n            });\r\n            console.log(response);\r\n\r\n            if(response.data.message === \"success\"){\r\n                setState({...state, register:\"success\"});\r\n            }\r\n            else{\r\n                setState({...state, register:\"fail\"});\r\n            }\r\n        }\r\n        else{\r\n            console.log('is not same between password and confirm password');\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n        <form>\r\n                <h3>Sign up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Id</label>\r\n                    <input type='text' value={state.userid } onChange={e => setState({...state, userid:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type='text' value={state.password } onChange={e => setState({...state, password:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Confirm new password</label>\r\n                    <input type='text' value={state.confirmPassword } onChange={e => setState({...state, confirmPassword:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Nickname</label>\r\n                    <input type='text' value={state.nickname } onChange={e => setState({...state, nickname:e.target.value})}/>\r\n                </div>\r\n\r\n                {/*\r\n                    check box(Remember me)\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={register}>\r\n                    회원가입\r\n                    </button>\r\n\r\n                <p className=\"forgot-password text-right\">\r\n                    <Link to='/'>Login 창으로 돌아가기</Link>\r\n                </p>\r\n                <p className=\"forgot-password text-right\">\r\n                    회원가입 성공?? <b>{state.register}</b>\r\n                </p>\r\n            </form>\r\n      \r\n      /*\r\n      <div>\r\n        <p> Login</p>\r\n        <input type='text' value={state.userid} onChange={e => setState({...state, userid:e.target.value})}/>\r\n        <input type='text' value={state.password } onChange={e => setState({...state, password:e.target.value})}/>\r\n        <br></br>로그인을 하려면 <b>{\"회원가입\"}</b>을 해야 합니다.\r\n      </div>\r\n      */      \r\n    );\r\n}\r\n\r\n\r\nexport default Signup;","C:\\Users\\q\\madcamp_week4\\src\\pages\\Home\\Home.js",["35","36","37"],"C:\\Users\\q\\madcamp_week4\\src\\pages\\Login\\Login.js",["38","39","40","41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":23},{"ruleId":"46","severity":1,"message":"50","line":2,"column":57,"nodeType":"48","messageId":"49","endLine":2,"endColumn":61},{"ruleId":"46","severity":1,"message":"51","line":9,"column":9,"nodeType":"48","messageId":"49","endLine":9,"endColumn":13},{"ruleId":"46","severity":1,"message":"52","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":11,"column":16,"nodeType":"55","endLine":20,"endColumn":6},{"ruleId":"46","severity":1,"message":"56","line":2,"column":9,"nodeType":"48","messageId":"49","endLine":2,"endColumn":14},{"ruleId":"46","severity":1,"message":"57","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":13},{"ruleId":"46","severity":1,"message":"58","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":14},{"ruleId":"46","severity":1,"message":"52","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"46","severity":1,"message":"58","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":20,"column":16,"nodeType":"55","endLine":29,"endColumn":6},{"ruleId":"59","severity":1,"message":"60","line":41,"column":34,"nodeType":"61","messageId":"62","endLine":41,"endColumn":36},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'name' is assigned a value but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Route' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]