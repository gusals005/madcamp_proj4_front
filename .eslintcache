[{"C:\\Users\\q\\myapp\\src\\index.js":"1","C:\\Users\\q\\myapp\\src\\App.js":"2","C:\\Users\\q\\myapp\\src\\reportWebVitals.js":"3","C:\\Users\\q\\myapp\\src\\redux\\store.js":"4","C:\\Users\\q\\myapp\\src\\components\\Navbar.js":"5","C:\\Users\\q\\myapp\\src\\pages\\Login\\Signup.js":"6","C:\\Users\\q\\myapp\\src\\pages\\Ranking\\Ranking.js":"7","C:\\Users\\q\\myapp\\src\\pages\\Totoking\\Totoking.js":"8","C:\\Users\\q\\myapp\\src\\pages\\Aipick\\Aipick.js":"9","C:\\Users\\q\\myapp\\src\\pages\\Factcheck\\Factcheck.js":"10","C:\\Users\\q\\myapp\\src\\pages\\Home\\Home.js":"11","C:\\Users\\q\\myapp\\src\\pages\\Login\\Login.js":"12","C:\\Users\\q\\myapp\\src\\redux\\root-reducer.js":"13","C:\\Users\\q\\myapp\\src\\components\\MatchList.js":"14","C:\\Users\\q\\myapp\\src\\redux\\user\\action.js":"15","C:\\Users\\q\\myapp\\src\\redux\\user\\reducer.js":"16","C:\\Users\\q\\myapp\\src\\redux\\user\\selector.js":"17","C:\\Users\\q\\myapp\\src\\redux\\user\\types.js":"18"},{"size":1035,"mtime":1611772502212,"results":"19","hashOfConfig":"20"},{"size":1043,"mtime":1611785284833,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1611698791061,"results":"22","hashOfConfig":"20"},{"size":381,"mtime":1611772502215,"results":"23","hashOfConfig":"20"},{"size":2412,"mtime":1611785678496,"results":"24","hashOfConfig":"20"},{"size":4085,"mtime":1611772723639,"results":"25","hashOfConfig":"20"},{"size":13808,"mtime":1611785571667,"results":"26","hashOfConfig":"20"},{"size":1879,"mtime":1611785538999,"results":"27","hashOfConfig":"20"},{"size":1942,"mtime":1611785545475,"results":"28","hashOfConfig":"20"},{"size":5454,"mtime":1611785357888,"results":"29","hashOfConfig":"20"},{"size":5171,"mtime":1611785373194,"results":"30","hashOfConfig":"20"},{"size":3877,"mtime":1611772716947,"results":"31","hashOfConfig":"20"},{"size":413,"mtime":1611772502213,"results":"32","hashOfConfig":"20"},{"size":8498,"mtime":1611772502211,"results":"33","hashOfConfig":"20"},{"size":681,"mtime":1611772502217,"results":"34","hashOfConfig":"20"},{"size":1005,"mtime":1611772502218,"results":"35","hashOfConfig":"20"},{"size":683,"mtime":1611772502218,"results":"36","hashOfConfig":"20"},{"size":242,"mtime":1611772502218,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"1w7748f",{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"41"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"41"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"41"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"41"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"C:\\Users\\q\\myapp\\src\\index.js",["80","81","82","83","84","85"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { combineReducers, createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store = {store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["86","87"],"C:\\Users\\q\\myapp\\src\\App.js",["88","89","90","91"],"C:\\Users\\q\\myapp\\src\\reportWebVitals.js",[],"C:\\Users\\q\\myapp\\src\\redux\\store.js",[],"C:\\Users\\q\\myapp\\src\\components\\Navbar.js",["92","93","94"],"C:\\Users\\q\\myapp\\src\\pages\\Login\\Signup.js",["95","96"],"import axios from 'axios';\r\nimport React, { Component, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\n\r\nfunction Signup(){\r\n    const [state, setState] = useState({userid:\"\",password:\"\",confirmPassword:\"\",nickname:\"\", coin:10000, register:\"loading\"});\r\n\r\n    document.title = `Sign up`;\r\n\r\n\r\n    useEffect( async () => {\r\n        //const response = await axios.get('http://192.249.18.232:8080/');\r\n        //console.log(response);\r\n        \r\n        /*\r\n              console.log(response.data.myCollection[0]);\r\n              state.name = response.data.myCollection[0].test_database;\r\n              state.age = response.data.myCollection[0].test;\r\n        */\r\n    });\r\n    \r\n    //회원가입 \r\n    async function register(e) {\r\n        e.preventDefault();\r\n        console.log('Register was clicked');\r\n        if(state.password === state.confirmPassword){\r\n            const response = await axios.post('http://192.249.18.232:8080/user/signup',{\r\n                user_id: state.userid,\r\n                password : state.password,\r\n                //confirmPassword: state.confirmPassword,\r\n                name:state.nickname,\r\n                principal:state.coin,\r\n                coin:state.coin\r\n            });\r\n            console.log(response);\r\n\r\n            if(response.data.message === \"success\"){\r\n                setState({...state, register:\"success\"});\r\n            }\r\n            else{\r\n                setState({...state, register:\"fail\"});\r\n            }\r\n        }\r\n        else{\r\n            console.log('is not same between password and confirm password');\r\n        }\r\n    \r\n    }\r\n\r\n    return (\r\n        <form>\r\n                <h3>Sign up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Id</label>\r\n                    <input type='text' value={state.userid } onChange={e => setState({...state, userid:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type='text' value={state.password } onChange={e => setState({...state, password:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Confirm new password</label>\r\n                    <input type='text' value={state.confirmPassword } onChange={e => setState({...state, confirmPassword:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Nickname</label>\r\n                    <input type='text' value={state.nickname } onChange={e => setState({...state, nickname:e.target.value})}/>\r\n                </div>\r\n\r\n                {/*\r\n                    check box(Remember me)\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n                */}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" onClick={register}>\r\n                    회원가입\r\n                    </button>\r\n\r\n                <p className=\"forgot-password text-right\">\r\n                    <Link to='/'>Login 창으로 돌아가기</Link>\r\n                </p>\r\n                <p className=\"forgot-password text-right\">\r\n                    회원가입 성공?? <b>{state.register}</b>\r\n                </p>\r\n            </form>\r\n      \r\n      /*\r\n      <div>\r\n        <p> Login</p>\r\n        <input type='text' value={state.userid} onChange={e => setState({...state, userid:e.target.value})}/>\r\n        <input type='text' value={state.password } onChange={e => setState({...state, password:e.target.value})}/>\r\n        <br></br>로그인을 하려면 <b>{\"회원가입\"}</b>을 해야 합니다.\r\n      </div>\r\n      */      \r\n    );\r\n}\r\n\r\n\r\nexport default Signup;","C:\\Users\\q\\myapp\\src\\pages\\Ranking\\Ranking.js",["97","98","99","100","101"],"C:\\Users\\q\\myapp\\src\\pages\\Totoking\\Totoking.js",["102","103","104"],"C:\\Users\\q\\myapp\\src\\pages\\Aipick\\Aipick.js",["105","106","107"],"C:\\Users\\q\\myapp\\src\\pages\\Factcheck\\Factcheck.js",["108","109","110","111","112","113","114"],"C:\\Users\\q\\myapp\\src\\pages\\Home\\Home.js",["115","116","117","118","119","120","121","122","123","124","125","126"],"C:\\Users\\q\\myapp\\src\\pages\\Login\\Login.js",["127","128","129","130","131"],"import React, { Component, useEffect, useState } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport Signup from './Signup';\r\nimport './Login.css';\r\nimport 'react-bootstrap/Form'\r\nimport { SetUser_id, SetCoin,SetBetting,SetName,SetPrincipal, LoginSuccess} from '../../redux/user/action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n/*\r\nLogin page\r\n    - Login 기능 구현 (Id 하고 pwd받아서 DB 내에 사용자인지 확인) (Get api로 확인)\r\n    - Login 를 하기 위한 회원가입 페이지도 만들어야 함.(POST api 만들어야 하고)\r\n    - Login \r\n*/\r\nfunction Login(props){\r\n    const [state, setState] = useState({userid:\"\",password:\"\", login:\"waitting input.\"});\r\n\r\n    document.title = `Login`;\r\n\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    //login \r\n    async function LoginCheck(e) {\r\n        e.preventDefault();\r\n        console.log('The link was clicked');\r\n        const response = await axios.post('http://192.249.18.232:8080/user/login',{\r\n            user_id: state.userid,\r\n            password : state.password\r\n        });\r\n        console.log(response);\r\n\r\n        if(response.data.message == \"fail\"){\r\n            console.log(\"로그인 실패\");\r\n            setState({...state, login:\"fail\"});   \r\n        }\r\n        else{\r\n            console.log(\"로그인 성공\");\r\n            setState({...state, login:\"success\"});\r\n            \r\n            //login이 성공하면, 그 유저의 정보를 가져와서 Home에 유저 정보 넘겨주기\r\n            //console.log(response.data.currentUser);\r\n            let user = response.data.currentUser;\r\n            \r\n            //token도 넣어주긴해야함.\r\n            let token = response.data.token;\r\n            console.log(\"token\",token);\r\n\r\n            dispatch(LoginSuccess({token:token}));\r\n            dispatch(SetUser_id({user_id:user.user_id}));\r\n            console.log(\"찐\",user.coin);\r\n            dispatch(SetCoin({coin:user.coin}));\r\n            dispatch(SetBetting({betting:user.betting}));\r\n            dispatch(SetName({name:user.name}));\r\n            dispatch(SetPrincipal({principal:user.principal}));\r\n\r\n            \r\n            props.history.push(\"/home\");\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form class=\"form-form\">\r\n            <h3>Sign In</h3>\r\n            <div class=\"form-group\">\r\n                <label for=\"id\">Id</label>\r\n                {/*\r\n                <input type=\"email\" class=\"form-control\" id=\"id\" aria-describedby=\"emailHelp\">\r\n                    */}\r\n                <input type='text' class=\"form-control\" value={state.userid } id=\"id\" onChange={e => setState({...state, userid:e.target.value})}/>\r\n                <small id=\"help\" class=\"form-text text-muted\">hi.helpmessagetest</small>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"exampleInputPassword1\">Password</label>\r\n                <input type='text' class=\"form-control\" value={state.password } onChange={e => setState({...state, password:e.target.value})}/>\r\n                {/*<input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\"> */}\r\n            </div>\r\n            <div class=\"form-group form-check\">\r\n                <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\"/>\r\n                <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\r\n            </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\" onClick={LoginCheck}>Submit</button>\r\n            <p className=\"form-group\">\r\n                <Link to='/signup' class=\"nav-link\">Signup</Link>\r\n            </p>\r\n            <p className=\"forgot-password text-right\">\r\n                로그인 성공?? <b>{state.login}</b>\r\n            </p>\r\n        </form>\r\n        \r\n    );\r\n}\r\n\r\n\r\nexport default Login;","C:\\Users\\q\\myapp\\src\\redux\\root-reducer.js",[],"C:\\Users\\q\\myapp\\src\\components\\MatchList.js",["132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles , withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport { BrandingWatermark } from '@material-ui/icons';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport NativeSelect from '@material-ui/core/NativeSelect';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { selectUser_id, selectCoin } from '../redux/user/selector';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 360,\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    dialog:{\r\n        margin:30,\r\n    },\r\n}));\r\n\r\nconst BootstrapInput = withStyles((theme) => ({\r\n  root: {\r\n    'label + &': {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n  input: {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid #ced4da',\r\n    fontSize: 16,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: '#80bdff',\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\r\n    },\r\n  },\r\n}))(InputBase);\r\n\r\n\r\n\r\nconst AlertDialog = (props) => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [checked, setChecked] = React.useState([1]);\r\n    const [amount,setAmount] = React.useState(0);\r\n    const [error_message,setError_message] = React.useState('');\r\n    const classes = useStyles();\r\n\r\n    useEffect(()=>{\r\n        //console.log(amount);\r\n        \r\n    }, [amount])\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    //팝업창 닫기\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      console.log(checked);\r\n    };\r\n\r\n    //betting\r\n    const handleBetting = () => {\r\n        if(props.user.coin < amount){\r\n            setError_message(\"가진돈보다 많은 금액은 베팅하실 수 없습니다.\");\r\n            setOpen(true);\r\n        }\r\n        else{\r\n            setError_message(\"\");\r\n            setOpen(false);\r\n        }\r\n        console.log(amount);\r\n        console.log(checked);\r\n    };\r\n\r\n    const handleToggle = (value) => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n        \r\n        if (currentIndex === -1 && newChecked.length ==0) {\r\n          newChecked.push(value);\r\n        } else if(currentIndex !== -1 && newChecked.length !== 0){\r\n          newChecked.splice(currentIndex, 1);\r\n        }\r\n\r\n        setChecked(newChecked);\r\n    };\r\n    \r\n    const setDialog = (value) => {\r\n        let team_name = \"\";\r\n        let team_odds = 0.0;\r\n        switch(value){\r\n            case 0:\r\n                team_name = \"팀 이름\";\r\n                team_odds = \"배당률\";\r\n                break;\r\n            case 1:\r\n                team_name = props.match.home;\r\n                team_odds = props.match.win_odds;\r\n                break;\r\n            case 2:\r\n                team_name = props.match.away;\r\n                team_odds = props.match.lose_odds;\r\n                break;\r\n        }\r\n\r\n        return(\r\n            <div className=\"dialog\">\r\n                {team_name}\r\n                &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n                {team_odds}\r\n            </div>    \r\n        )\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n          Betting This Game\r\n        </Button>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          className={classes.dialog}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n        <DialogTitle id=\"alert-dialog-title\" className={classes.dialog}>{`Home ${props.match.home} vs ${props.match.away} Away`}</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>\r\n                내가가진 코인 : {props.user.coin}\r\n                <br />\r\n                투자하기:\r\n                <FormControl className={classes.margin}>\r\n                    <InputLabel htmlFor=\"demo-customized-textbox\">amount</InputLabel>\r\n                    <BootstrapInput id=\"demo-customized-textbox\" onChange={e => setAmount(e.target.value)}/>\r\n                </FormControl>\r\n            </DialogContentText>\r\n            <List dense className={classes.root}>\r\n                {[0, 1,2].map((value) => {\r\n                    const labelId = `checkbox-list-secondary-label-${value}`;\r\n                    return (\r\n                    <ListItem key={value} button>\r\n                        <ListItemText id={labelId}>\r\n                            {setDialog(value)}\r\n                        </ListItemText>\r\n                        \r\n                        <ListItemSecondaryAction>\r\n                        {value > 0 ? <Checkbox\r\n                            edge=\"end\"\r\n                            onChange={handleToggle(value)}\r\n                            checked={checked.indexOf(value) !== -1}\r\n                            inputProps={{ 'aria-labelledby': labelId }}\r\n                        /> : ''}\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                    );\r\n                })}\r\n            </List>\r\n            <DialogContentText>\r\n                {error_message}\r\n            </DialogContentText>\r\n            \r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                Close\r\n            </Button>\r\n            <Button onClick={handleBetting} color=\"primary\" autoFocus>\r\n                Betting\r\n            </Button>\r\n        </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst MatchList = (props) => {\r\n    \r\n    let user_id = useSelector(state => {\r\n        return selectUser_id(state);\r\n    });\r\n    let user_coin = useSelector(state => {\r\n        return selectCoin(state);\r\n    });\r\n    const loadList = () => {\r\n        return props.matches.map((item) => {\r\n            let match_date = item.match_date.split('T')[0];\r\n            console.log(match_date);\r\n            \r\n            return(\r\n                <div className=\"list-group-item list-group-item-action\">\r\n                    <div className=\"d-flex w-100 justify-content-between\">\r\n                    <h5 className=\"mb-1\">{item.home} vs {item.away}</h5>\r\n                    <small>{match_date}</small>\r\n                    </div>\r\n                    <p className=\"mb-1\">점수  || Home {item.home_score} : {item.away_score} Away</p>\r\n                    <small>배당률 || Win {item.win_odds} : {item.lose_odds} Lose</small>\r\n                    <AlertDialog match={item} user={{coin:user_coin}} />\r\n                </div>\r\n            ) \r\n            \r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {loadList()}\r\n        </ul>\r\n\r\n    )\r\n}\r\n\r\nexport default MatchList;","C:\\Users\\q\\myapp\\src\\redux\\user\\action.js",[],"C:\\Users\\q\\myapp\\src\\redux\\user\\reducer.js",["146"],"import AuthActionTypes from './types';\r\n\r\nconst INITIAL_STATE = {\r\n    jwt:'init',\r\n    user_id: 'init',\r\n    coin: 0,\r\n    betting: [],\r\n    name: 'init',\r\n    principal: 0\r\n};\r\n\r\nconst authReducer = (state = INITIAL_STATE, action) => {\r\n    if (state === undefined)\r\n        state = INITIAL_STATE;\r\n    switch (action.type) {\r\n        case 'LoginSuccess':\r\n            console.log(\"찐찐\",action.token);\r\n            return {...state, jwt:action.jwt};\r\n        case 'SetUser_id':\r\n            return { ...state, user_id:action.user_id };\r\n        case 'SetCoin':\r\n            console.log(\"찐찐\",action.coin);\r\n            return { ...state, coin: action.coin }\r\n        case 'SetBetting':\r\n            return { ...state, betting: action.betting }\r\n        case 'SetName':\r\n            return { ...state, name: action.name }\r\n        case 'SetPrincipal':\r\n            return { ...state, principal: action.principal }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport default authReducer;","C:\\Users\\q\\myapp\\src\\redux\\user\\selector.js",[],"C:\\Users\\q\\myapp\\src\\redux\\user\\types.js",[],{"ruleId":"147","severity":1,"message":"148","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":25},{"ruleId":"147","severity":1,"message":"151","line":7,"column":27,"nodeType":"149","messageId":"150","endLine":7,"endColumn":38},{"ruleId":"147","severity":1,"message":"152","line":8,"column":10,"nodeType":"149","messageId":"150","endLine":8,"endColumn":22},{"ruleId":"147","severity":1,"message":"153","line":8,"column":24,"nodeType":"149","messageId":"150","endLine":8,"endColumn":38},{"ruleId":"147","severity":1,"message":"154","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":15},{"ruleId":"147","severity":1,"message":"155","line":10,"column":9,"nodeType":"149","messageId":"150","endLine":10,"endColumn":28},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"147","severity":1,"message":"160","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":23},{"ruleId":"147","severity":1,"message":"161","line":2,"column":57,"nodeType":"149","messageId":"150","endLine":2,"endColumn":61},{"ruleId":"147","severity":1,"message":"162","line":11,"column":8,"nodeType":"149","messageId":"150","endLine":11,"endColumn":14},{"ruleId":"147","severity":1,"message":"163","line":14,"column":9,"nodeType":"149","messageId":"150","endLine":14,"endColumn":13},{"ruleId":"147","severity":1,"message":"164","line":2,"column":9,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"165","line":4,"column":9,"nodeType":"149","messageId":"150","endLine":4,"endColumn":12},{"ruleId":"147","severity":1,"message":"166","line":4,"column":14,"nodeType":"149","messageId":"150","endLine":4,"endColumn":21},{"ruleId":"147","severity":1,"message":"167","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":26},{"ruleId":"168","severity":1,"message":"169","line":11,"column":16,"nodeType":"170","endLine":20,"endColumn":6},{"ruleId":"147","severity":1,"message":"164","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":15},{"ruleId":"147","severity":1,"message":"161","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"171","line":7,"column":8,"nodeType":"149","messageId":"150","endLine":7,"endColumn":19},{"ruleId":"147","severity":1,"message":"172","line":9,"column":8,"nodeType":"149","messageId":"150","endLine":9,"endColumn":14},{"ruleId":"147","severity":1,"message":"173","line":130,"column":11,"nodeType":"149","messageId":"150","endLine":130,"endColumn":15},{"ruleId":"147","severity":1,"message":"164","line":2,"column":9,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"147","severity":1,"message":"173","line":32,"column":11,"nodeType":"149","messageId":"150","endLine":32,"endColumn":15},{"ruleId":"147","severity":1,"message":"164","line":2,"column":9,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"147","severity":1,"message":"173","line":32,"column":11,"nodeType":"149","messageId":"150","endLine":32,"endColumn":15},{"ruleId":"147","severity":1,"message":"164","line":2,"column":9,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"161","line":2,"column":16,"nodeType":"149","messageId":"150","endLine":2,"endColumn":20},{"ruleId":"147","severity":1,"message":"174","line":12,"column":18,"nodeType":"149","messageId":"150","endLine":12,"endColumn":21},{"ruleId":"147","severity":1,"message":"175","line":12,"column":22,"nodeType":"149","messageId":"150","endLine":12,"endColumn":25},{"ruleId":"147","severity":1,"message":"165","line":12,"column":26,"nodeType":"149","messageId":"150","endLine":12,"endColumn":29},{"ruleId":"147","severity":1,"message":"166","line":12,"column":30,"nodeType":"149","messageId":"150","endLine":12,"endColumn":37},{"ruleId":"147","severity":1,"message":"173","line":95,"column":11,"nodeType":"149","messageId":"150","endLine":95,"endColumn":15},{"ruleId":"147","severity":1,"message":"164","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":15},{"ruleId":"147","severity":1,"message":"161","line":2,"column":17,"nodeType":"149","messageId":"150","endLine":2,"endColumn":21},{"ruleId":"147","severity":1,"message":"176","line":2,"column":23,"nodeType":"149","messageId":"150","endLine":2,"endColumn":34},{"ruleId":"147","severity":1,"message":"177","line":3,"column":8,"nodeType":"149","messageId":"150","endLine":3,"endColumn":14},{"ruleId":"147","severity":1,"message":"178","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"179","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"180","line":7,"column":10,"nodeType":"149","messageId":"150","endLine":7,"endColumn":15},{"ruleId":"147","severity":1,"message":"181","line":19,"column":10,"nodeType":"149","messageId":"150","endLine":19,"endColumn":21},{"ruleId":"147","severity":1,"message":"182","line":20,"column":10,"nodeType":"149","messageId":"150","endLine":20,"endColumn":20},{"ruleId":"147","severity":1,"message":"183","line":81,"column":18,"nodeType":"149","messageId":"150","endLine":81,"endColumn":25},{"ruleId":"147","severity":1,"message":"173","line":83,"column":11,"nodeType":"149","messageId":"150","endLine":83,"endColumn":15},{"ruleId":"184","severity":1,"message":"185","line":140,"column":57,"nodeType":"186","endLine":140,"endColumn":86},{"ruleId":"147","severity":1,"message":"167","line":1,"column":17,"nodeType":"149","messageId":"150","endLine":1,"endColumn":26},{"ruleId":"147","severity":1,"message":"187","line":1,"column":28,"nodeType":"149","messageId":"150","endLine":1,"endColumn":37},{"ruleId":"147","severity":1,"message":"179","line":4,"column":8,"nodeType":"149","messageId":"150","endLine":4,"endColumn":14},{"ruleId":"147","severity":1,"message":"181","line":8,"column":23,"nodeType":"149","messageId":"150","endLine":8,"endColumn":34},{"ruleId":"188","severity":1,"message":"189","line":36,"column":34,"nodeType":"190","messageId":"191","endLine":36,"endColumn":36},{"ruleId":"147","severity":1,"message":"161","line":2,"column":10,"nodeType":"149","messageId":"150","endLine":2,"endColumn":14},{"ruleId":"147","severity":1,"message":"192","line":5,"column":8,"nodeType":"149","messageId":"150","endLine":5,"endColumn":14},{"ruleId":"147","severity":1,"message":"193","line":8,"column":8,"nodeType":"149","messageId":"150","endLine":8,"endColumn":22},{"ruleId":"147","severity":1,"message":"194","line":12,"column":8,"nodeType":"149","messageId":"150","endLine":12,"endColumn":18},{"ruleId":"147","severity":1,"message":"195","line":13,"column":8,"nodeType":"149","messageId":"150","endLine":13,"endColumn":15},{"ruleId":"147","severity":1,"message":"196","line":14,"column":8,"nodeType":"149","messageId":"150","endLine":14,"endColumn":18},{"ruleId":"147","severity":1,"message":"197","line":15,"column":10,"nodeType":"149","messageId":"150","endLine":15,"endColumn":14},{"ruleId":"147","severity":1,"message":"198","line":21,"column":10,"nodeType":"149","messageId":"150","endLine":21,"endColumn":27},{"ruleId":"147","severity":1,"message":"199","line":23,"column":8,"nodeType":"149","messageId":"150","endLine":23,"endColumn":16},{"ruleId":"147","severity":1,"message":"200","line":25,"column":8,"nodeType":"149","messageId":"150","endLine":25,"endColumn":14},{"ruleId":"147","severity":1,"message":"201","line":26,"column":8,"nodeType":"149","messageId":"150","endLine":26,"endColumn":20},{"ruleId":"188","severity":1,"message":"189","line":120,"column":54,"nodeType":"190","messageId":"191","endLine":120,"endColumn":56},{"ruleId":"202","severity":1,"message":"203","line":132,"column":9,"nodeType":"204","messageId":"205","endLine":145,"endColumn":10},{"ruleId":"147","severity":1,"message":"206","line":222,"column":9,"nodeType":"149","messageId":"150","endLine":222,"endColumn":16},{"ruleId":"147","severity":1,"message":"207","line":1,"column":8,"nodeType":"149","messageId":"150","endLine":1,"endColumn":23},"no-unused-vars","'combineReducers' is defined but never used.","Identifier","unusedVar","'createStore' is defined but never used.","'persistStore' is defined but never used.","'persistReducer' is defined but never used.","'storage' is defined but never used.","'composeWithDevTools' is defined but never used.","no-native-reassign",["208"],"no-negated-in-lhs",["209"],"'BrowserRouter' is defined but never used.","'Link' is defined but never used.","'Navbar' is defined but never used.","'name' is assigned a value but never used.","'Route' is defined but never used.","'Nav' is defined but never used.","'NavItem' is defined but never used.","'Component' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'CardActions' is defined but never used.","'Button' is defined but never used.","'bull' is assigned a value but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'useLocation' is defined but never used.","'styles' is defined but never used.","'Login' is defined but never used.","'Signup' is defined but never used.","'Paper' is defined but never used.","'useSelector' is defined but never used.","'selectCoin' is defined but never used.","'setUser' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Avatar' is defined but never used.","'ListItemAvatar' is defined but never used.","'PersonIcon' is defined but never used.","'AddIcon' is defined but never used.","'Typography' is defined but never used.","'blue' is defined but never used.","'BrandingWatermark' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'NativeSelect' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'user_id' is assigned a value but never used.","'AuthActionTypes' is defined but never used.","no-global-assign","no-unsafe-negation"]